目标
   了解变量在内存中的存放方式
   掌握指针变量的声明和赋值
   掌握常用指针类型

1、了解变量在内存中的存放方式
   内存具有什么特点：
      Flash Memory(闪存、记忆体)
      冯.诺伊曼 提出的现代计算机的体系结构--存储器、运算器、输入、输出、控制器
      存储器：硬盘、内存
      运算器：CPU 
      输入：键盘、摄像头、话筒、鼠标、触摸板、Leap Motion、游戏手柄、、
      输出：显示器、投影仪、打印机、音箱、
      控制器：主板上的 PCI 总线

      编写的程序，存储为硬盘上的文件，运行的过程如下：
         硬盘-->内存-->CPU-->内存-->总线-->显示器  
      内存的特点是：
        (1)读写数据速度快；
        (2)大小有限制；
        (3)通电可以读写数据，断电刷新，无法持久保存数据； 
      
如果一个颗粒中容量为：      128M 内存空间 ，整个内存条上面所有的内存颗粒，地址
是相连的。

    (1)程序启动，运行、数据都是存放在这连续的内存空间中。
    (2)程序运行时，内存时随机分配，每次都不一样；
    (3)操作系统会给所有的内存条中的存储单元进行编号---内存地址；
    (4)程序运行的时候，不能靠变量名直接操作内存地址中的数据；
    (5)程序运行后，可以通过特殊的方法得到 内存地址，并传递、操作内存地址、
       记住了内存的地址，随时可以从这个地址中取出 存放的数据。


内存空间的代码访问方式：
(1)通过变量名访问；
(2)通过地址访问；

根据变量名，得到变量指向内存的地址的运算符：  &
int a =10;
&a 表示 10 在内存中的地址




2、掌握指针变量的声明和赋值
指针的概念：
  指针(*)：内存地址，用于间接访问内存单元中的值
  指针变量：用于存放地址的变量，必须跟在 * 后面


int i = 3;
int *p;
p = NULL;    ==   p = 0;
p = &i;
*p = 3;


语法：
     存储数据类型  *指针名  =  &初始地址;

注意：
(1)用变量地址  给指针变量赋值前，这个变量必须声明过。
(2)指针变量的“存储数据类型” 必须与 内存中存放的数据类型相同。
(3)可以用一个已经 赋过值的指针，去初始化另外一个指针变量。
(4)如果一个 指针变量，赋值为  0 或 NULL，表示该指针是一个空指针
(5)指针的类型，是说它指向内存中存放的数据的类型，而不是 内存地址的类型。
   任何指针本身的类型都是 unsigned long int 类型
(6)打印"指针变量"的值，可以采用  %p 格式符   
    int *p ;
    p -> 指针变量
    printf(" %ld  \n",p);  //打印地址，报警告
    printf(" %p   \n",p);  //不报警告

3、掌握常用指针类型
指向指针的指针  int **p;
void *p;









