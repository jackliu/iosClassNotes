CGFloat、CGPoint、CGSize和CGRect

CG 指结构体
　
1、数据类型：
CGFloat: 浮点值的基本类型
CGPoint: 表示一个二维坐标系中的点
CGSize: 表示一个矩形的宽度和高度
CGRect: 表示一个矩形的位置和大小

//自定义类型，可以在 32-bit 的时候，定义为  float
//64-bit 时，定义为 double
typedef float CGFloat;// 32-bit 
typedef double CGFloat;// 64-bit  

struct CGPoint {     CGFloat x;     CGFloat y; };
typedef struct CGPoint CGPoint;  

struct CGSize {     CGFloat width;     CGFloat height; }; 
typedef struct CGSize CGSize;  

struct CGRect {     CGPoint origin;     CGSize size; };
typedef struct CGRect CGRect;

注意：CGRect数据结构的高度和宽度可以是负数。
	例如，一个矩形的原点是[0.0，0.0]和大小是[10.0,10.0]。
	这个矩形完全等同原点是[10.0，10.0]和大小是[-10.0，-10.0]的矩形。



2、使用值来创建几何元素的方法
CGPointMake
CGRectMake
CGSizeMake
CGPoint CGPointMake (    CGFloat x,    CGFloat y );  
CGSize CGSizeMake (    CGFloat width,    CGFloat height );  
CGRect CGRectMake (    CGFloat x,    CGFloat y,    CGFloat width,    CGFloat height );
CGFloat ten=10.0f;     
CGPoint point = CGPointMake(0.0f, 0.0f);     
CGSize size = CGSizeMake(10.0f, 10.0f);     
CGRect rect = CGRectMake(point.x, point.y, size.width, size.height);     
NSLog(@"ten: %f", ten);     
NSLog(@"point: %@", NSStringFromCGPoint(point));     
NSLog(@"size: %@", NSStringFromCGSize(size));     
NSLog(@"rect: %@", NSStringFromCGRect(rect));





常用的CGRect 函数

　1.CGRectOffset使用从源CGRect偏移的原点来创建矩形
    float offset = 25.0;
    CGRect r1 = CGRectMake(100, 100, 100, 100);
    CGRect r2 = CGRectOffset(r1, offset, offset);
2.CGRectIntersectsRect允许我们确定两个矩形是否相交
    float offset = 25.0;
    CGRect r1 = CGRectMake(100, 100, 100, 100);
    CGRect r2 = CGRectMake(150, 150, 100, 100);
    if (CGRectIntersectsRect(r1, r2))
    {
        NSLog(@"intersecting");
    }
3.NSStringFromCGRect可以用来把CGRect显示到控制台
    CGRect r1 = CGRectMake(100, 100, 100, 100);
    NSLog(@"rect:@%",NSStringFromCGRect(r1));    
同样，CGRectFromString允许我们根据一个字符串创建一个CGRect：
    NSString *r = @"{0,0},{100,100}";
    CGRect r1 = CGRectFromString(r);　
    
    
    
    
    